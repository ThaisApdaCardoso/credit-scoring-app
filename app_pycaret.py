# -*- coding: utf-8 -*-
"""Untitled26.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vnVDU21IvM8_FxnLH62iOaLm8kKoYqm6
"""

import streamlit as st
import pandas as pd
from pycaret.classification import load_model, predict_model

st.set_page_config(page_title="Credit Scoring", layout="wide")
st.title("🏦 Credit Scoring App ")

# 📁 Upload do arquivo
uploaded_file = st.file_uploader("Envie o arquivo .ftr", type=["ftr"])

# 📦 Carregar modelo salvo pelo PyCaret
@st.cache_resource
def carregar_modelo():
    return load_model("modelo_lightgbm_pycaret")

modelo = carregar_modelo()

# ✅ Quando o arquivo for enviado
if uploaded_file is not None:
    try:
        if uploaded_file.name.endswith(".csv"):
            df = pd.read_csv(uploaded_file)
        elif uploaded_file.name.endswith(".ftr"):
            df = pd.read_feather(uploaded_file)
        else:
            st.error("Formato de arquivo não suportado.")
            st.stop()

        st.success("✅ Arquivo carregado com sucesso!")
        st.subheader("📄 Dados carregados:")
        st.dataframe(df.head())

        # 🔮 Aplicar o modelo
        resultado = predict_model(modelo, data=df)
        st.subheader("📊 Dados com previsões:")
        st.dataframe(resultado.head())

        # ⬇️ Botão de download
        csv = resultado.to_csv(index=False).encode("utf-8")
        st.download_button("⬇️ Baixar resultado como CSV", data=csv, file_name="previsoes.csv", mime="text/csv")

    except Exception as e:
        st.error(f"Erro ao processar o arquivo ou aplicar o modelo: {e}")

    # 💾 Botão de download
    csv = resultado.to_csv(index=False).encode("utf-8")
    st.download_button(
        label="⬇️ Baixar resultado como CSV",
        data=csv,
        file_name="resultado_escoragem.csv",
        mime="text/csv"
    )
